#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define NSL  2
#define ADJ  3

&mt {
    /* tapping-term-ms = <170>; */

    quick-tap-ms = <250>;
    /* flavor = "hold-preferred"; */
    /* global-quick-tap; */
};

&lt {
    /* tapping-term-ms = <170>; */
    quick-tap-ms = <250>;
    /* flavor = "tap-preferred"; */
    /* global-quick-tap; */
    require-prior-idle-ms = <250>;
};

&sk { quick-release; };

/ {
    behaviors {
        /*   Custom mod-tap/layer-tap behavior.
        *   The main idea is to accomodate
        *   the one-shot (i.e. sticky) mods.
        */
        slt: sticky_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <250>;
            bindings = <&mo>, <&sk>;
            display-name = "Sticky-Layer-Tap";
        };

        smt: sticky_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
            display-name = "Sticky-Mod-Tap";
        };

        tap_dance_2_1: tap_dance_2_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2_1";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        };

        tap_dance_2_2: tap_dance_2_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2_2";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp NON_US_BACKSLASH>;
        };

        tap_dance_2_3: tap_dance_2_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2_3";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp LS(NON_US_BACKSLASH)>;
        };

        tap_dance_4_1: tap_dance_4_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4_1";
            #binding-cells = <0>;
            bindings = <&kp LS(BACKSLASH)>, <&kp AT_SIGN>;
        };

        tap_dance_4_2: tap_dance_4_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4_2";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp RA(Q)>;
        };

        tap_dance_sym_3_4: tap_dance_sym_3_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SYM_3_4";
            #binding-cells = <0>;
            bindings = <&kp AMPERSAND>, <&kp UNDERSCORE>;
        };

        tap_dance_sym_3_5: tap_dance_sym_3_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SYM_3_5";
            #binding-cells = <0>;
            bindings = <&kp RA(Q)>, <&kp GRAVE>;
        };

        tap_dance_sym_4_4: tap_dance_sym_4_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SYM_4_4";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp QMARK>;
        };

        tap_dance_sym_4_5: tap_dance_sym_4_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SYM_4_5";
            #binding-cells = <0>;
            bindings = <&kp RA(MINUS)>, <&kp RA(NON_US_BACKSLASH)>;
        };
    };

    macros {
        /*   Easier navigation macros.  */

        four_down: four_down_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DOWN &kp DOWN &kp DOWN &kp DOWN>;
        };

        four_up: four_up_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp UP &kp UP &kp UP &kp UP>;
        };

        eight_down: eight_down_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp N8 &kp DOWN>;
        };

        eight_up: eight_up_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp N8 &kp UP>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        media_layer_condition {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    /* ---------------------------------------------------------------------------------------------------------------------------------------------------- 
              ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
              ┃     b     ┃     l     ┃     d     ┃     w     ┃    z      ┃   ┃     "     ┃     f     ┃     o     ┃     u     ┃     j     ┃
              ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
              ┃     n     ┃     r     ┃     t     ┃     s     ┃    g      ┃   ┃     y     ┃     h     ┃     a     ┃     e     ┃     i     ┃
  ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
  ┃   LCTRL   ┃     q     ┃     x     ┃     m     ┃     c     ┃    v      ┃   ┃     k     ┃     p     ┃   - (+)   ┃   . (>)   ┃  / (<)    ┃    RET    ┃
  ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
                                      ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
                                      ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
*/
    keymap {
        compatible = "zmk,keymap";
        base_layer {
            label = "BASE";
            bindings = <
           &tap_dance_2_1  &tap_dance_2_2  &tap_dance_2_3  &kp P        &kp Z        &kp F      &kp G          &kp C            &kp R        &kp L
           &kp A           &mt LEFT_GUI O  &mt LEFT_ALT E  &mt LCTRL U  &kp I        &kp D      &mt RCTRL H    &mt RIGHT_ALT T  &mt RMETA N  &kp S
&kp LSHFT  &tap_dance_4_1  &tap_dance_4_2  &kp J           &kp K        &kp X        &kp B      &kp M          &kp W            &kp V        &kp Y  &kp RIGHT_SHIFT
                                           &kp DELETE      &slt 1 TAB   &kp SPACE    &kp ENTER  &slt 2 ESCAPE  &kp BACKSPACE
            >;
        };

        /* ---------------------------------------------------------------------------------------------------------------------------------------------------- */

        nav_layer {
            label = "NAV";
            bindings = <
        &kp KP_NUMBER_7  &kp KP_NUMBER_7  &kp KP_NUMBER_3  &kp KP_NUMBER_1  &kp KP_NUMBER_9    &kp KP_NUMBER_0  &kp KP_NUMBER_2  &kp KP_NUMBER_4  &kp KP_NUMBER_6  &kp KP_NUMBER_8
        &kp F1           &kp F2           &kp F3           &kp F4           &kp F5             &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &trans
&trans  &kp F6           &kp F7           &kp F8           &kp F9           &kp F10            &kp HOME         &kp PAGE_DOWN    &kp PAGE_UP      &kp END          &trans           &trans
                                          &kp F11          &trans           &kp F12            &trans           &trans           &trans
            >;
        };

        /* ---------------------------------------------------------------------------------------------------------------------------------------------------- */

        num_sym_layer {
            label = "NSL";
            bindings = <
        &kp RA(NUMBER_8)       &kp RA(NUMBER_7)  &kp RA(NUMBER_0)  &kp ASTERISK        &kp RIGHT_PARENTHESIS    &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RA(NUMBER_9)  &kp EXCLAMATION
        &kp RA(RIGHT_BRACKET)  &kp PERCENT       &kp LS(EQUAL)     &tap_dance_sym_3_4  &tap_dance_sym_3_5       &kp APOSTROPHE   &kp SEMICOLON         &kp LEFT_BRACKET   &kp RA(E)         &kp MINUS
&trans  &kp DOLLAR             &kp CARET         &kp BACKSLASH     &tap_dance_sym_4_4  &tap_dance_sym_4_5       &trans           &trans                &trans             &trans            &trans           &trans
                                                 &kp LEFT_GUI      &trans              &kp SPACE                &kp ENTER        &trans                &kp LEFT_ALT
            >;
        };

        /* ---------------------------------------------------------------------------------------------------------------------------------------------------- */

        adjust_layer {
            label = "ADJ";
            bindings = <
            &sys_reset    &trans  &trans  &trans  &trans        &trans             &trans            &trans      &trans  &trans
            &bootloader   &trans  &trans  &trans  &bt BT_NXT    &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT  &trans  &trans
&bt BT_CLR  &out OUT_TOG  &trans  &trans  &trans  &bt BT_PRV    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp C_MUTE  &trans  &trans  &trans
                                  &trans  &trans  &trans        &trans             &trans            &trans
            >;
        };
    };
};
