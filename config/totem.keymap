#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define NSL  2
#define ADJ  3

&mt {
  /* quick-tap-ms = <100>; */
  /* global-quick-tap; */
    flavor = "hold-preferred";
  /* tapping-term-ms = <170>; */
};

&lt {
    /* tapping-term-ms = <170>; */
    /* quick-tap-ms = <150>; */
    flavor = "tap-preferred";
    global-quick-tap;
};

&sk {
    quick-release;
};

/ {
    behaviors {
       /*   Custom mod-tap/layer-tap behavior.
        *   Experimental; subject to revision.
        */
        slt: sticky_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sk>;
            display-name = "Sticky-Layer-Tap";
        };


        smt: sticky_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
            display-name = "Sticky-Mod-Tap";
        };

       /*   Control Key -associated behavior of certain elements
        *   implemented as nested mod-morphs.
        *   Perhaps, not the most optimal way to achieve
        *   the desired mode of operation. Thus, subject
        *   to revision.
        */
        spc_L1: rctl_space {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&kp COMMA>;
            mods = <(MOD_RCTL)>;
        };

        spc_L0: lctl_space {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&spc_L1>, <&kp COLON>;
            mods = <(MOD_LCTL)>;
        };

        r_qmark: rctl_qmark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mt RCTRL RET>, <&kp QMARK>;
            mods = <(MOD_LSFT)>;
        };

        l_ctl: lctl_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp SEMI>;
            mods = <(MOD_RCTL)>;
        };

       /*   Quasi-Shift behavior for certain keys.
        *   In the traditional QWERTY layout/keyboard proper,
        *   pairs of non-alphanumeric symbols seem to be tightly coupled
        *   with one another via Shift Mod Key (e.g. / and ? )
        *   There might be an easier way to handle the decoupling in ZMK,
        *   and, as such, this schema is also subject to revision.
        */
        s_minus: shift_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp GT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        s_dot: shift_dot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp APOS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        s_slash: shift_slash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            /* bindings = <&lt 2 FSLH>, <&kp LT>; */
            bindings = <&kp FSLH>, <&kp LT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        s_excl: shift_exclamation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

    };

    macros {
       /*   Easier navigation macros.
        *
        */
        four_down: four_down_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DOWN &kp DOWN &kp DOWN &kp DOWN>;
        };

        four_up: four_up_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp UP &kp UP &kp UP &kp UP>;
        };

        eight_down: eight_down_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N8 &kp DOWN>;
        };

        eight_up: eight_up_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N8 &kp UP>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
/* ---------------------------------------------------------------------------------------------------------------------------------------------------- 
              ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
              ┃     b     ┃     l     ┃     d     ┃     w     ┃    z      ┃   ┃   " (!)   ┃     f     ┃     o     ┃     u     ┃     j     ┃
              ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
              ┃     n     ┃     r     ┃     t     ┃     s     ┃    g      ┃   ┃     y     ┃     h     ┃     a     ┃     e     ┃     i     ┃
  ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
  ┃   LCTRL   ┃     q     ┃     x     ┃     m     ┃     c     ┃    v      ┃   ┃     k     ┃     p     ┃   - (>)   ┃   . (')   ┃  / (<)    ┃   RCTRL   ┃
  ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
                                      ┃           ┃ spc(:)(,) ┃           ┃   ┃           ┃           ┃           ┃
                                      ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
*/
        base_layer {
            label= "BASE";
            bindings = <
                &kp B       &kp L       &kp D         &kp W         &kp Z       &s_excl        &kp F           &kp O      &kp U       &kp J
                &kp N       &kp R       &kp T         &kp S         &kp G       &kp Y          &kp H           &kp A      &kp E       &kp I
    &l_ctl      &kp Q       &kp X       &kp M         &kp C         &kp V       &kp K          &kp P           &s_minus   &s_dot      &s_slash   &mt RCTRL RET
                                        &mt LMETA TAB &slt 1 LSHFT  &spc_L0     &mt RCTRL BSPC &smt RSHFT RALT &mo 3
            >;
        };
/* ---------------------------------------------------------------------------------------------------------------------------------------------------- 
               ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
               ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃
               ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
               ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃
   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
   ┃           ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃           ┃
   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
                                       ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
                                       ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
*/
        nav_layer {
            label= "NAV";
            bindings = <
                &trans      &trans      &trans       &trans      &trans          &trans     &eight_down  &eight_up   &trans      &trans
                &trans      &trans      &trans       &trans      &trans          &kp LEFT   &kp DOWN     &kp UP      &kp RIGHT   &trans
    &trans      &trans      &trans      &trans       &trans      &trans          &trans     &four_down   &four_up    &trans      &trans     &trans
                                        &trans       &trans      &trans          &trans     &trans       &trans
            >;
        };
/* ---------------------------------------------------------------------------------------------------------------------------------------------------- 
               ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
               ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃
               ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
               ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃
   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
   ┃           ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃           ┃
   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
                                       ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
                                       ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
*/
        num_sym_layer {
            label= "NSL";
            bindings = <
                &kp HASH    &kp LBKT    &kp RBKT     &kp PIPE    &kp TILDE       &kp PRCNT   &kp N7      &kp N8      &kp N9     &kp ASTRK
                &kp AT      &kp LPAR    &kp RPAR     &kp AMPS    &kp GRAVE       &kp UNDER   &kp N4      &kp N5      &kp N6     &kp EQUAL
    &kp EXCL    &kp CARET   &kp LBRC    &kp RBRC     &kp DOLLAR  &kp BSLH        &kp PLUS    &kp N1      &kp N2      &kp N3     &kp N0      &kp QMARK
                                        &trans       &trans      &trans          &trans      &trans      &trans
            >;
        };
/* ----------------------------------------------------------------------------------------------------------------------------------------------------
               ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
               ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃
               ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
               ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃
   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
   ┃           ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃           ┃
   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
                                       ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
                                       ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
*/
        adjust_layer {
            label= "ADJ";
            bindings = <
                &sys_reset   &bt DEL    &trans       &trans      &trans          &trans      &trans      &trans       &trans      &trans
                &bootloader  &bt BT_NXT &trans       &trans      &trans          &trans      &trans      &trans       &trans      &trans
    &trans      &out OUT_TOG &bt BT_PRV &trans       &trans      &trans          &trans      &trans      &trans       &trans      &trans    &trans
                                        &trans       &trans      &trans          &trans      &trans      &trans
            >;
        };
    };
};
//
/* Ex-nav layer */
/*                 &kp HASH    &kp LBKT    &kp RBKT     &kp PIPE    &kp TILDE       &trans     &eight_down  &eight_up   &trans      &trans */
/*                 &kp AT      &kp LPAR    &kp RPAR     &kp AMPS    &kp GRAVE       &kp LEFT   &kp DOWN     &kp UP      &kp RIGHT   &trans */
/*     &kp EXCL    &kp CARET   &kp LBRC    &kp RBRC     &kp DOLLAR  &kp BSLH        &trans     &four_down   &four_up    &trans      &trans     &trans */
/*                                         &trans       &trans      &trans          &trans     &trans       &trans */
//
/* Ex-sym layer */
/*                 &kp DEL     &kp F7      &kp F8      &kp F9      &kp F12          &kp PRCNT   &kp N7      &kp N8      &kp N9     &kp ASTRK */
/*                 &bt BT_NXT  &kp F4      &kp F5      &kp F6      &kp F11          &kp UNDER   &kp N4      &kp N5      &kp N6     &kp EQUAL */
/*     &bt BT_CLR  &bt BT_PRV  &kp F1      &kp F2      &kp F3      &kp F10          &kp PLUS    &kp N1      &kp N2      &kp N3     &kp N0      &kp QMARK */
/*                                         &trans      &trans      &trans           &trans      &trans      &trans */
